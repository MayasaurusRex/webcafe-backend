package com.example.CafeGoogooExample;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@Controller // This means that this class is a Controller
@RequestMapping(path="/order") // This means URL's start with /demo (after Application path)
public class OrderController {

    public static final Logger LOG = LoggerFactory.getLogger(com.example.CafeGoogooExample.UserController.class);

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private OrderRepository orderRepository;

    //ADD
    @CrossOrigin(origins = "http://localhost:8081")
    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody ResponseEntity<UserOrder>  addOrder (@RequestParam String userId) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        LOG.info("userId: {}", userId);
        UserOrder order = new UserOrder();
        order.setUserId(userId);
        orderRepository.save(order);
       // ResponseEntity.ok(order);
        return ResponseEntity.ok(order);
    }

    //GET
    @CrossOrigin(origins = "http://localhost:8081")
    @GetMapping(path="/all")
    public @ResponseBody ResponseEntity<Iterable<UserOrder>> getAllOrders() {
        // This returns a JSON or XML with the users
        return ResponseEntity.ok(orderRepository.findAll());
    }

}